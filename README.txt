This is a tool to encrypt and decrypt various files using the Advanced Encryption Standard (AES) in Cipher Block Chaining (CBC) mode. Both arbitrarily long plaintext passwords and 256 bit keys may be used for encryption and decryption of files.

This program uses the python 3 programming language, alongside the Cryptography library for cryptographic operations and the tkinter library for GUI design.

To run the program (Windows) simply double click or right click and run the "encryption_gui.exe" file. If unable to run the executable file, with python and the appropriate libraries installed, run the command "python encryption_gui.py" to execute the source code using python. 

To encrypt a file, first click the "Browse" button to select a file in your file system to encrypt, then, either enter an encryption password or a 256 bit key (32 Hex Bytes) to use and click the "Encrypt" button. If a key is used, the "Use Key for Encryption/Decryption" checkbox must be selected. If no password or key is provided, a random key will be generated and copied to your clipboard. Be sure to store or save this password somewhere safe. The encrypted file will be the name of the original file plus the ".aes" extension. You will be given a confirmation to overwrite an existing file if a file of this encrypted name already exists in the directory. There is an additional option to delete the original file, which will overwrite with random bytes and delete the orignal unencrypted version of the file after confirmation is given.

To decrypt a file, first click the "Browse" button to select a file in your file system to encrypt, then, either enter the corresponding encryption password or a 256 bit key (32 Hex Bytes) you have previously saved/stored, and click the "Decrypt" button. If a hex key is used, the "Use Key for Encryption/Decryption" checkbox must be selected. If the password/key is correct, the decrypted file will be the name of the original file minus the ".aes" extension.  You will be given a confirmation to overwrite an existing file if a file of the decrypted name already exists in the directory. If incorrect, you will get an incorrect padding error. There is an additional option to delete the original file, which will overwrite with random bytes and delete the orignal encrypted version of the file after confirmation is given.

